//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Urdms.Dmp.Web.Menu;

namespace Urdms.Dmp.Web.Views.Menu
{
	using System.Collections.Generic;
	using System.Linq;
	using System.Text.RegularExpressions;

	[System.CodeDom.Compiler.GeneratedCodeAttribute("MvcRazorClassGenerator", "1.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Menu/_TopNav.cshtml")]
    public class _Page_Views_Menu__TopNav_cshtml : Urdms.Dmp.Web.Pages.BasePage<IList<Urdms.Dmp.Web.Menu.MenuItem>>
    {
#line hidden
#line hidden
public System.Web.WebPages.HelperResult OutputUrl(MenuItem item)
    {
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {


     
    if(new Regex(@"^\w+\://").Match(item.Path).Success) {
        
WriteTo(@__razor_helper_writer, item.Path);

                  
    } else {
        
WriteTo(@__razor_helper_writer, Url.Content("~" + item.Path));

                                     
    }

});

}


        public _Page_Views_Menu__TopNav_cshtml()
        {
        }
        protected System.Web.HttpApplication ApplicationInstance
        {
            get
            {
                return ((System.Web.HttpApplication)(Context.ApplicationInstance));
            }
        }
        public override void Execute()
        {



WriteLiteral("\r\n");



WriteLiteral("\r\n\r\n<ul>\r\n");


 foreach (var item in Model)
{
    var show = !item.Auth.HasValue ||
               (
                   item.Auth == User.Identity.IsAuthenticated &&
                   (item.Roles.Count == 0 || (item.Roles.Any(r => User.IsInRole(r))))
               );
    if (show)
    {
        var cssClass = item.Selected ? "selected" : "";

WriteLiteral("        <li class=\"");


              Write(cssClass);

WriteLiteral("\"><a href=\"");


                                  Write(OutputUrl(item));

WriteLiteral("\">");


                                                    Write(item.Title);

WriteLiteral("</a></li>\r\n");


    }
}

WriteLiteral("</ul>\r\n");


        }
    }
}
